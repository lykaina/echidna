Operations: (summary)
Op	Name	Info
&	sub start	4-uchar-label after (no whitespace)
-	endwhile	with 1-uchar-label after (no whitespace)
--	endsub	endwhile with label='-'
_	endif	1-uchar-label after (no whitespace)
G	stop	
H	store	mem[val0] = val1
I	input	mem[val] = input
J	output	val%256
K	clear sub	set 256-byte memory range to zero. input: 2-hex-memory-upper-mask
L	bitwise_1bit	mem[val0] = val1 2byte-mask-if-zero 2byte-mask-if-one
M	bitwise_2bit	mem[val0] = val1 val2 1-hex-logic-code
N	call sub	4-uchar-label and a 2-hex-memory-upper-mask
O	ifwh_eq	if/while val0 == val1 1-uchar-label
P	ifwh_lt	if/while val0 < val1 1-uchar-label
Q	ifwh_ne	if/while val0 != val1 1-uchar-label
R	rand	mem[val] = random num from 0 to 65535
S	read	mem[val] pval-high pval-low (pval represents 32-bit position in prog file)
T	add	mem[val0] = (val1 + val2)
U	sub	mem[val0] = (val1 - val2)
V	mul	mem[val0] = (val1 * val2)
W	div	mem[val0] = (val1 / val2)
X	mod	mem[val0] = (val1 % val2)
Y	shl	mem[val0] = (val1 << (val2 % 16))
Z	shr	mem[val0] = (val1 >> (val2 % 16))
